8. 성능 데이터모델링

1. 성능 데이터모델링 : 데이터베이스의 성능을 최적화하기 위해 정규화, 반정규화, 테이블 통합 및 분할, 조인 구조 개선, 기본키, 외래키의 적절한 설정을 고려해 데이터모델링을 수행하는 것

2. 수행시점
	- 가능한 가장 빠른 시점에서 하는것이 효과적이다
	- 분석 및 설계단계에서 성능 모델링을 수행하면 이후 발생할 수 있는 성능 문제를 사전에 예방하고 재작업으로 인한 비용과 시간을 최소화할 수 있다.
	- 일반적으로 데이터모델링을 대략적으로 설계한 뒤 성능저하기 발생하면, 해당 부분만을 SQL 튜닝으로 보완하는 경우가 많다. 하지만 이는 근본적인 해결책이 아니므로 초기 단계부터 성능을 고려한 모델링이 중요

3. 진행순서
	- 정규화 수행 : 데이터 중복제거와 데이터 무결성 확로를 위해 정규화 수행, 주요 관심사별 테이블 분산 데이터 관리 체계화
	- 데이터베이스 용량 산정 : 각 엔터티에 저장될 데이터의 양과 크기 파악, 엔터티별로 처리될 트랜잭션의 양을 파악하여 용량 예측
	- 트랜책션 유형 분석 : 데이터베이스에 발생하는 트랜잭션의 유형(읽기,쓰기 등)을 파악, CRUD 매트릭스를 활용해 각 테이블과 트랜잭션의 관계를 분석함
	- 반정규화 수행 : 용량과 트랜잭션 유형을 고려하여 성능을 향상시킬 수 있도록 필요한 부분에 대해 반정규화를 적용, 테이블 병합, 중복 칼럼 추가, 관계 변경등 반정규화 기법 사용
	- 세부 설계 조정 및 성능 검증 : 이력 모델의 조정, 인덱스를 고려한 PK,FK의 순서 조정, 슈퍼타입 서브타입 조정등을 수행, 성능관점에서 데이터 모델을 최종적으로 검증
