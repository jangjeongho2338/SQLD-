5. 식별자

1. 식별자의 정의 : 데이터 모델링에서 각 엔터티 내의 개별 데이터(인스턴스)를 고유하게 구별할 수 있는 속성, 데이터 무결성과 일관성 유지에 필수적이며 주로 기본키로 사용

2. 식별자의 종류
	- 대표성
		- 주식별자 : 엔터티 내에서 각 인스턴스를 구분할 수 있음
		- 보조식별자 : 타 엔터티와 참조 관계를 연결가능(Primary Key 포함)
	- 목적
		- 내부식별자 : 엔터티 내부에서 스스로 만들어지는 식별자
		- 외부식별자 : 관계를 통해 유입되는 타 엔터티의 식별자(Foreign Key포함), 주식별자를 통해 속성 또는 일반 속성으로 포함가능
	- 속성 수
		- 단일식별자 : 하나의 속성으로 구성된 식별자
		- 복합식별자 : 둘이상의 속성으로 구성된 식별자
	- 본질
		- 본질(원조) 식별자 : 업무상 이미 존재하는 속성으로 만들어진 식별자(기본 속성에 해당)
		- 인조(대리) 식별자 : 데이터베이스 설계 과정에서 필요에의해 인위적으로 만들어진 식별자(설계속성에 해당됨)

3.식별자의 특징
	- 유일성 : 주식별자에 의해 엔터티 내의 각 인스턴스들을 모두 유일하게 구분 할 수 있어야한다 ex) 각 회원에게 ID가 고유적으로 부여됨
	- 최소성 : 주식별자를 구성하는 속성의 수는 유일성을 만족하는 최소의 수가 되어야된다 ex) 만약 ID만으로 유일성이 만족 안된다면 ID+이름은 주식별자가 아님
	- 불변성 : 주식별자가 지정되면 그 식별자의 값은 변하지 않아야함 ex) ID값은 변하지 않음
	- 존재성 : 주식별자는 NULL이 될 수 없음 ex) 회원 ID는 NULL일 수 없음

4. 주식별자 도출 기준
	- 유일성을 잦춘 속성중에서 업무활용도가 높은 속성 선택 ex) 사원번호 주민번호둘다 유일성이 있지만 많이 사용하는 사원번호가 주식별자 주민번호는 보조식별자
	- 명칭 기반 속성 지양 :  명칭이나 내역등 문자 정보로 표현되는 속성은 자주 변경되거나 중복일 가능성이 높으므로 지정X
	- 복합식별자 구성 시 과도한 속성 포함 방지 ex) 접수 일자, 관할부서, 입력자사번등 여러 속성을 복합해 복합식별자를 만드는 대신 접수번호 같은 인조식별자를 새로 생성하여 주식별자를 단순화하는것이 더 좋다

5. 식별자와 비식별자 관계 : 부모 엔터티의 주식별자를 자식 엔터티에 어떻게 상속하느냐에 따라 식별자 관계와 비식별자 관계로 나눌 수 있다

	- 식별자 관계 : 부모 엔터티의 주식별자 속성을 자식 언터티가 주식별자로 상속받는 경우
		- 부모 엔터티가 생성되지 않으면 자식 엔터티도 생성되지 않는다
		- 자식 엔터티는 주식별자에 부모 엔터티의 식별자(FK)가 반드시 포함되며, 이 속성은 NULL을 허용하지 않는다
		- 관계 차수에 따른 분류
			- 자식 엔터티의 주식별자가 부모 식별자만으로 구성되면 > 1:1 관계 ex) 사원번호 > 사원번호(FK)
			- 자식 엔터티의 주식별자가 부모 식별자 + 추가 속성으로 구성되면 > 1:n 관계 ex) 사원번호(FK),발령일자

	- 비식별자 관계 : 부모 엔터티의 주식별자 속성을 자식 엔터티의 일반 속성(비식별자)으로 포함하는 경우
		- 부모 엔터티 없이도 자식엔터티 생성이 가능하다(부모와 결합도 낮음)
		- 주식별자로 포함할 수 있지만 일반 속성으로두는것이 더 유리하다면 비식별자 관계 선택 가능 ex) 학생 수강 간의 관계에서 학생의 학번은 수강 엔터티로 넘어갈 때 외래 키(FK)가 되며 식별자 관계가 된다 하지만 수강번호라는 인조 식별자를 생성하면 학번은 일반속성으로 존재하는 비식별자 관계가 된다

6. 식별자 관계 남용시 문제 
	- 주식별자 속성이 점점 늘어남 ex) 대학 2개에서 학번이 같다면 학번만으로 구분이 어렵기 때문에 학교명, 대학코드, 학번과 같이 추가적인 속성을 주식별자에 포함해야한다

7. 비식별자 관계 남용 시 문제
	- 데이터 조회시 조인 횟수 증가 ex) 대학 2개에서 대학코드와 학번을 모두 고유하게 부여했다면 학번만으로도 학생을 구분할 수 있다, 하지만 이름이 홍길동인 학생의 소재지 조회를 하려면 먼저 대학코드를 찾고 소재지 확인까지 여러번의 조인연산이 필요함

8. 비식별자 관계를 고려해야 하는 경우
	- 부모-자식 관계 강도가 약할때
	- 자식 엔터티가 독립적인 주 식별자를 갖는 경우
	- PK 속성의 단순화 필요성
