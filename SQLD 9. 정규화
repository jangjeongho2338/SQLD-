9. 정규화

1. 이상현상 : 데이터베이스의 설계에서 정규화가 제대로 이루어지지 않았거나 비효율적 테이터 구조로 인해 발생하는 문제점
	- 삭제 이상 : 데이터 삭제 시 의도치않게 다른 데이터도 삭제되는 현상 ex) 학생의 수강기록 삭제시 과목을 통체로 지울수도 있음
	- 삽입 이상 : 데이터를 삽입할 때 불필요한 데이터를 함께 입력해야 하는 비효율적인 상황 ex) 학생 정보를 추가할 때 4가지를 추가해야하는데 3가지를 추가했을경우 관련없는 다른 정보가 없으므로 오류 발생
	- 갱신 이상 : 데이터 수정시 동일한 데이터가 여러곳에 중복 저장되어 있는 경우 한 곳을 수정했을때 다른 곳과 불일치 할 수 있다 ex) 1101학번의 학생의 연락처를 변경하려고 할 때 다른곳에도 저장되어 있다면 모두 수정해야함
  
2. 정규화
	- 개념 : 데이터베이스의 구조를 체계적으로 설계하여 데이터 중복을 최소화하고, 이상 현상을 방지하며, 데이터 무결성과 효율성을 높이는것, 이를통해 일관성 유지, 저장공간 절약, 데이터 삽입, 삭제, 갱신때 발생할 수 있는 문제를 예방 가능
	- 함수적 종속성에 기반 : 함수는 주어진 X값에 대해 대응하는 Y값이 유일하게 결정되는 관계 ex) 학번,혈액형이 있다면 특정 혈액형을 기준으로 조회하면 여러 학번이 나올 수 있음, 이 관계는 함수가 아니며, 데이터베이스에서 혈액형이 학번을 함수적으로 결정하지 못한다고 표현 반대로 학번을 기준으로 혈액형을 조회하면 항상 하나의 혈액형이 결정된다, 이러한 관계는 학번이 혈액형을 함수적으로 결정한다고 한다, 결과적으로 혈액형은 함수적으로 종속된다
	- 종류
		- 제1 정규형 : 모든 속성이 원자값(나눌수 없는 값)을 가진다, 즉 칼럼은 단일값만을 포함해야한다, 한 행에 같은 종류의 데이터가 반복되면 안된다, 반복된다면 분리해야한다 ex) 과목명 수학,국어,과학등 한칸이 있으면 안됨 과목 : 수학같이 하나만 있어야댐
		- 제2 정규형 : 부분 함수 종속을 제거하여 비효율성을 줄인다 , 1정규형을 만족하며 기본 키의 부분 함수 종속을 제거한 상태를 의미, 제 1정규형 만족, 기본 키가 복합 키(두개이상의 속성)일때, 기본 키의 일부 속성에만 종속되는 비기본 속성이 없어야 댄다
		- 제3 정규형 : 이행 함수 종속을 제거하여 데이터무결성을 유지함, 식별자가 아닌 속성이 결정자 역할을 하는 함수 종속을 제거하여 제3정규형을 얻을 수 있다, 비기본 속성이 다른 비기본 속성에 종속돠는 경우를 제거해야한다, 기본 A가 B를 결정, B가 C를 결정, A와 C간의 관계가 이행 함수 종속 ex) 학번, 학생명, 소속학과코드, 학과명 > (학번 학생명 소속학과코드) (소속학과코드 학과명) 으로 분리된다

3. 정규화의 효과 
	- 데이터 중복 감소 : 데이터를 중복 없이 체계적으로 관리 가능해 저장공간 절약되고 데이터 일관성이 유지됨
	- 데이터가 관심사별로 묶임 :테이블이 논리적으로 분리되면서 데이터 관리와 유지보수가 쉬워지고, 효율적인 설계가 가능
	- 조회시 조인이 많이 발성 : 테이블이 분리되며 조희 질의에서 조인이 자주 발생해 성능 저하

4. 예시
	- 수강 ( 학번, 과목명, 학생명, 평점, 학년) > 학생 ( 학번, 학생명, 학년) 수강 (과목명, 학번, 평점) 
		- 특정 학생의 학년 변경 : 전 해당 학생이 수강 테이블에 나타나는 만큼 변경, 후 해당 학생의 학년 한건만 변경
		- 3학년 학생의 학번 이름 조회 : 전 수강 이력이 누적된 수만큼 인스턴스 조회, 후 학생 수만큼 인스턴스 조회
		- 학번, 학생명, 과목명, 평점 조회 : 전 하나의 테이블에서 모두 조회, 후 조인 필요
